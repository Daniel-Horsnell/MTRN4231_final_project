[0.368s] Invoking command in '/home/mtrn/MTRN4231_final_project/build/path_planning': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/mtrn/4231/ws_moveit2/install/moveit_configs_utils:/home/mtrn/4231/ws_moveit2/install/launch_param_builder:/opt/ros/humble /usr/bin/cmake --build /home/mtrn/MTRN4231_final_project/build/path_planning -- -j4 -l4
[0.442s] [35m[1mConsolidate compiler generated dependencies of target brain_node[0m
[0.471s] [ 50%] [32mBuilding CXX object CMakeFiles/brain_node.dir/src/brain_node.cpp.o[0m
[0.698s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:47:32:[m[K [01;35m[Kwarning: [m[Kcharacter constant too long for its type
[0.699s]    47 |                 message.data = [01;35m[K'restart'[m[K;
[0.699s]       |                                [01;35m[K^~~~~~~~~[m[K
[3.213s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K In lambda function:
[3.213s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:16:62:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
[3.213s]    16 |             [this]([01;35m[Kconst tf2_msgs::msg::TFMessage::SharedPtr msg[m[K) {
[3.214s]       |                    [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[3.219s] In file included from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
[3.219s]                  from [01m[K/usr/include/c++/11/algorithm:74[m[K,
[3.219s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:18[m[K,
[3.219s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[3.219s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[3.219s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[3.219s]                  from [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:1[m[K:
[3.219s] /usr/include/c++/11/functional: In instantiation of â€˜[01m[Kstruct std::_Bind_check_arity<void (BrainNode::*)(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >), BrainNode*>[m[Kâ€™:
[3.219s] [01m[K/usr/include/c++/11/functional:768:12:[m[K   required from â€˜[01m[Kstruct std::_Bind_helper<false, void (BrainNode::*)(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >), BrainNode*>[m[Kâ€™
[3.219s] [01m[K/usr/include/c++/11/functional:789:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (BrainNode::*)(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >); _BoundArgs = {BrainNode*}][m[Kâ€™
[3.219s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:21:116:[m[K   required from here
[3.219s] [01m[K/usr/include/c++/11/functional:756:21:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: Wrong number of arguments for pointer-to-member
[3.219s]   755 |       static_assert(_Varargs::[01;31m[Kvalue[m[K
[3.219s]       |                               [01;31m[K~~~~~[m[K
[3.219s]   756 | [01;31m[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1[m[K
[3.219s]       |                     [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.220s]   757 | [01;31m[K                    : sizeof...(_BoundArgs) == _Arity::value + 1[m[K,
[3.220s]       |                     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.220s] [01m[K/usr/include/c++/11/functional:756:21:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false ? (1 >= (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)) : (1 == (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)))[m[Kâ€™ evaluates to false
[3.226s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K In lambda function:
[3.227s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:26:65:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
[3.227s]    26 |             [this]([01;35m[Kconst geometry_msgs::msg::Point32::SharedPtr msg[m[K) {
[3.227s]       |                    [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[3.237s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K In member function â€˜[01m[Kvoid BrainNode::handle_pen_colours(std_msgs::msg::Int32MultiArray_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[3.237s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:39:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Klength[m[Kâ€™ was not declared in this scope
[3.237s]    39 |         if ([01;31m[Klength[m[K(colours) == 0) {
[3.237s]       |             [01;31m[K^~~~~~[m[K
[3.237s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:40:27:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kdata[m[Kâ€™
[3.237s]    40 |             colours = msg.[01;31m[Kdata[m[K;
[3.237s]       |                           [01;31m[K^~~~[m[K
[3.238s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:41:50:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kdata[m[Kâ€™
[3.238s]    41 |         } else if (length(colours) != length(msg.[01;31m[Kdata[m[K)) {
[3.238s]       |                                                  [01;31m[K^~~~[m[K
[3.238s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:43:13:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K,[m[Kâ€™ or â€˜[01m[K;[m[Kâ€™ before â€˜[01m[KremoveValuesWithinRange[m[Kâ€™
[3.238s]    43 |             [01;31m[KremoveValuesWithinRange[m[K(missing_colours, msg.data, 0.15)
[3.238s]       |             [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.244s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[3.244s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:82:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KMyNode[m[Kâ€™ was not declared in this scope
[3.244s]    82 |     rclcpp::spin(std::make_shared<[01;31m[KMyNode[m[K>());
[3.244s]       |                                   [01;31m[K^~~~~~[m[K
[3.244s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:82:42:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kmake_shared<<expression error> >()[m[Kâ€™
[3.244s]    82 |     rclcpp::spin([01;31m[Kstd::make_shared<MyNode>()[m[K);
[3.244s]       |                  [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[3.244s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[3.244s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153[m[K,
[3.244s]                  from [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:1[m[K:
[3.244s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:875:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::shared_ptr<_Tp> std::make_shared(_Args&& ...)[m[Kâ€™
[3.245s]   875 |     [01;36m[Kmake_shared[m[K(_Args&&... __args)
[3.245s]       |     [01;36m[K^~~~~~~~~~~[m[K
[3.245s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:875:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.245s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:82:42:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
[3.245s]    82 |     rclcpp::spin([01;31m[Kstd::make_shared<MyNode>()[m[K);
[3.245s]       |                  [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[3.814s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[3.814s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[3.814s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[3.814s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[3.814s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[3.814s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[3.814s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[3.815s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[3.815s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[3.815s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[3.815s]                  from [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:1[m[K:
[3.815s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[3.815s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.815s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.815s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.815s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.815s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:21:86:[m[K   required from here
[3.815s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:391:22:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>::function(std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>&)[m[Kâ€™
[3.815s]   391 |       set_deprecated([01;31m[Kstatic_cast<typename scbth::callback_type>(callback)[m[K);
[3.815s]       |                      [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.815s] In file included from [01m[K/usr/include/c++/11/future:47[m[K,
[3.816s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18[m[K,
[3.816s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[3.816s]                  from [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:1[m[K:
[3.816s] [01m[K/usr/include/c++/11/bits/std_function.h:435:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >}][m[Kâ€™
[3.816s]   435 |         [01;36m[Kfunction[m[K(_Functor&& __f)
[3.816s]       |         [01;36m[K^~~~~~~~[m[K
[3.816s] [01m[K/usr/include/c++/11/bits/std_function.h:435:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.817s] In file included from [01m[K/usr/include/c++/11/bits/move.h:57[m[K,
[3.817s]                  from [01m[K/usr/include/c++/11/bits/stl_pair.h:59[m[K,
[3.817s]                  from [01m[K/usr/include/c++/11/bits/stl_algobase.h:64[m[K,
[3.817s]                  from [01m[K/usr/include/c++/11/memory:63[m[K,
[3.817s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153[m[K,
[3.817s]                  from [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:1[m[K:
[3.817s] /usr/include/c++/11/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void][m[Kâ€™:
[3.817s] [01m[K/usr/include/c++/11/bits/std_function.h:353:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>::_Callable<std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>&, std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>, std::__invoke_result<std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>&, std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > > > >; _Tp = void; _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >}][m[Kâ€™
[3.817s] [01m[K/usr/include/c++/11/bits/std_function.h:434:9:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[3.818s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.818s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.818s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.818s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.818s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:21:86:[m[K   required from here
[3.818s] [01m[K/usr/include/c++/11/type_traits:2205:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[3.818s]  2205 |     using [01;31m[K__enable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[3.818s]       |           [01;31m[K^~~~~~~~~~~~~[m[K
[3.819s] In file included from [01m[K/usr/include/c++/11/future:47[m[K,
[3.819s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18[m[K,
[3.819s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[3.819s]                  from [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:1[m[K:
[3.819s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[3.819s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.819s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.819s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.819s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.819s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:21:86:[m[K   required from here
[3.819s] [01m[K/usr/include/c++/11/bits/std_function.h:404:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >}][m[Kâ€™
[3.819s]   404 |       [01;36m[Kfunction[m[K(function&& __x) noexcept
[3.819s]       |       [01;36m[K^~~~~~~~[m[K
[3.819s] [01m[K/usr/include/c++/11/bits/std_function.h:404:27:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>[m[Kâ€™ to â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>&&[m[Kâ€™
[3.819s]   404 |       function([01;36m[Kfunction&& __x[m[K) noexcept
[3.819s]       |                [01;36m[K~~~~~~~~~~~^~~[m[K
[3.819s] [01m[K/usr/include/c++/11/bits/std_function.h:386:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >}][m[Kâ€™
[3.820s]   386 |       [01;36m[Kfunction[m[K(const function& __x)
[3.820s]       |       [01;36m[K^~~~~~~~[m[K
[3.820s] [01m[K/usr/include/c++/11/bits/std_function.h:386:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>[m[Kâ€™ to â€˜[01m[Kconst std::function<void(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>&[m[Kâ€™
[3.820s]   386 |       function([01;36m[Kconst function& __x[m[K)
[3.820s]       |                [01;36m[K~~~~~~~~~~~~~~~~^~~[m[K
[3.820s] [01m[K/usr/include/c++/11/bits/std_function.h:375:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >}; std::nullptr_t = std::nullptr_t][m[Kâ€™
[3.820s]   375 |       [01;36m[Kfunction[m[K(nullptr_t) noexcept
[3.820s]       |       [01;36m[K^~~~~~~~[m[K
[3.820s] [01m[K/usr/include/c++/11/bits/std_function.h:375:16:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>[m[Kâ€™ to â€˜[01m[Kstd::nullptr_t[m[Kâ€™
[3.820s]   375 |       function([01;36m[Knullptr_t[m[K) noexcept
[3.821s]       |                [01;36m[K^~~~~~~~~[m[K
[3.821s] [01m[K/usr/include/c++/11/bits/std_function.h:368:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >}][m[Kâ€™
[3.821s]   368 |       [01;36m[Kfunction[m[K() noexcept
[3.821s]       |       [01;36m[K^~~~~~~~[m[K
[3.821s] [01m[K/usr/include/c++/11/bits/std_function.h:368:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[7.298s] gmake[2]: *** [CMakeFiles/brain_node.dir/build.make:76: CMakeFiles/brain_node.dir/src/brain_node.cpp.o] Error 1
[7.300s] gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/brain_node.dir/all] Error 2
[7.300s] gmake: *** [Makefile:146: all] Error 2
[7.302s] Invoked command in '/home/mtrn/MTRN4231_final_project/build/path_planning' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/mtrn/4231/ws_moveit2/install/moveit_configs_utils:/home/mtrn/4231/ws_moveit2/install/launch_param_builder:/opt/ros/humble /usr/bin/cmake --build /home/mtrn/MTRN4231_final_project/build/path_planning -- -j4 -l4
