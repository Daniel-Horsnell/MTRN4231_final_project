[0.338s] Invoking command in '/home/mtrn/MTRN4231_final_project/build/path_planning': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/mtrn/4231/ws_moveit2/install/moveit_configs_utils:/home/mtrn/4231/ws_moveit2/install/launch_param_builder:/opt/ros/humble /usr/bin/cmake /home/mtrn/MTRN4231_final_project/path_planning -DCMAKE_INSTALL_PREFIX=/home/mtrn/MTRN4231_final_project/install/path_planning
[0.541s] -- The C compiler identification is GNU 11.4.0
[0.673s] -- The CXX compiler identification is GNU 11.4.0
[0.682s] -- Detecting C compiler ABI info
[0.800s] -- Detecting C compiler ABI info - done
[0.802s] -- Check for working C compiler: /usr/bin/cc - skipped
[0.803s] -- Detecting C compile features
[0.807s] -- Detecting C compile features - done
[0.813s] -- Detecting CXX compiler ABI info
[0.932s] -- Detecting CXX compiler ABI info - done
[0.934s] -- Check for working CXX compiler: /usr/bin/c++ - skipped
[0.934s] -- Detecting CXX compile features
[0.935s] -- Detecting CXX compile features - done
[0.969s] -- Found ament_cmake: 1.3.5 (/opt/ros/humble/share/ament_cmake/cmake)
[1.234s] -- Found Python3: /usr/bin/python3.10 (found version "3.10.12") found components: Interpreter 
[1.671s] -- Found rclcpp: 16.0.5 (/opt/ros/humble/share/rclcpp/cmake)
[2.146s] -- Found rosidl_generator_c: 3.1.5 (/opt/ros/humble/share/rosidl_generator_c/cmake)
[2.188s] -- Found rosidl_adapter: 3.1.5 (/opt/ros/humble/share/rosidl_adapter/cmake)
[2.252s] -- Found rosidl_generator_cpp: 3.1.5 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)
[2.390s] -- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
[2.514s] -- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
[2.904s] -- Found rmw_implementation_cmake: 6.1.1 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)
[2.928s] -- Found rmw_cyclonedds_cpp: 1.3.4 (/opt/ros/humble/share/rmw_cyclonedds_cpp/cmake)
[3.142s] -- Using RMW implementation 'rmw_cyclonedds_cpp' as default
[3.219s] -- Looking for pthread.h
[3.413s] -- Looking for pthread.h - found
[3.413s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
[3.523s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success
[3.524s] -- Found Threads: TRUE  
[3.975s] -- Found geometry_msgs: 4.2.3 (/opt/ros/humble/share/geometry_msgs/cmake)
[4.112s] -- Found tf2_msgs: 0.25.3 (/opt/ros/humble/share/tf2_msgs/cmake)
[4.390s] -- Found ament_lint_auto: 0.12.7 (/opt/ros/humble/share/ament_lint_auto/cmake)
[4.509s] -- Added test 'cppcheck' to perform static code analysis on C / C++ code
[4.509s] -- Configured cppcheck include dirs: 
[4.509s] -- Configured cppcheck exclude dirs and/or files: 
[4.512s] -- Added test 'lint_cmake' to check CMake code style
[4.514s] -- Added test 'uncrustify' to check C / C++ code style
[4.514s] -- Configured uncrustify additional arguments: 
[4.516s] -- Added test 'xmllint' to check XML markup files
[4.523s] -- Configuring done
[4.544s] -- Generating done
[4.546s] -- Build files have been written to: /home/mtrn/MTRN4231_final_project/build/path_planning
[4.555s] Invoked command in '/home/mtrn/MTRN4231_final_project/build/path_planning' returned '0': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/mtrn/4231/ws_moveit2/install/moveit_configs_utils:/home/mtrn/4231/ws_moveit2/install/launch_param_builder:/opt/ros/humble /usr/bin/cmake /home/mtrn/MTRN4231_final_project/path_planning -DCMAKE_INSTALL_PREFIX=/home/mtrn/MTRN4231_final_project/install/path_planning
[4.556s] Invoking command in '/home/mtrn/MTRN4231_final_project/build/path_planning': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/mtrn/4231/ws_moveit2/install/moveit_configs_utils:/home/mtrn/4231/ws_moveit2/install/launch_param_builder:/opt/ros/humble /usr/bin/cmake --build /home/mtrn/MTRN4231_final_project/build/path_planning -- -j4 -l4
[4.632s] [ 50%] [32mBuilding CXX object CMakeFiles/brain_node.dir/src/brain_node.cpp.o[0m
[5.040s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:46:32:[m[K [01;35m[Kwarning: [m[Kcharacter constant too long for its type
[5.040s]    46 |                 message.data = [01;35m[K'restart'[m[K;
[5.040s]       |                                [01;35m[K^~~~~~~~~[m[K
[7.326s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:11:5:[m[K [01;31m[Kerror: [m[KISO C++ forbids declaration of â€˜[01m[KMyNode[m[Kâ€™ with no type [[01;31m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive-fpermissive]8;;[m[K]
[7.326s]    11 |     [01;31m[KMyNode[m[K() : Node("my_node") {
[7.326s]       |     [01;31m[K^~~~~~[m[K
[7.454s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:75:9:[m[K [01;35m[Kwarning: [m[KISO C++ forbids flexible array member â€˜[01m[Kcolours[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic-Wpedantic]8;;[m[K]
[7.454s]    75 |     int [01;35m[Kcolours[m[K[] = [];
[7.455s]       |         [01;35m[K^~~~~~~[m[K
[7.456s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:76:9:[m[K [01;35m[Kwarning: [m[KISO C++ forbids flexible array member â€˜[01m[Kcolours_processed[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wpedantic-Wpedantic]8;;[m[K]
[7.456s]    76 |     int [01;35m[Kcolours_processed[m[K[] = [];
[7.456s]       |         [01;35m[K^~~~~~~~~~~~~~~~~[m[K
[7.456s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:75:9:[m[K [01;31m[Kerror: [m[Kflexible array member â€˜[01m[KBrainNode::colours[m[Kâ€™ not at end of â€˜[01m[Kclass BrainNode[m[Kâ€™
[7.456s]    75 |     int [01;31m[Kcolours[m[K[] = [];
[7.457s]       |         [01;31m[K^~~~~~~[m[K
[7.457s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K In lambda function:
[7.457s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:75:23:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ at end of input
[7.457s]    75 |     int colours[] = [][01;31m[K;[m[K
[7.457s]       |                       [01;31m[K^[m[K
[7.457s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K At global scope:
[7.457s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:75:9:[m[K [01;31m[Kerror: [m[Kinitializer for flexible array member â€˜[01m[Kint BrainNode::colours [][m[Kâ€™
[7.457s]    75 |     int [01;31m[Kcolours[m[K[] = [];
[7.457s]       |         [01;31m[K^~~~~~~[m[K
[7.457s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K In lambda function:
[7.457s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:76:33:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K{[m[Kâ€™ at end of input
[7.457s]    76 |     int colours_processed[] = [][01;31m[K;[m[K
[7.457s]       |                                 [01;31m[K^[m[K
[7.457s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K At global scope:
[7.457s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:76:9:[m[K [01;31m[Kerror: [m[Kinitializer for flexible array member â€˜[01m[Kint BrainNode::colours_processed [][m[Kâ€™
[7.457s]    76 |     int [01;31m[Kcolours_processed[m[K[] = [];
[7.457s]       |         [01;31m[K^~~~~~~~~~~~~~~~~[m[K
[7.458s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K In member function â€˜[01m[Kint BrainNode::MyNode()[m[Kâ€™:
[7.458s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:11:16:[m[K [01;31m[Kerror: [m[Konly constructors take member initializers
[7.458s]    11 |     MyNode() : [01;31m[KNode[m[K("my_node") {
[7.458s]       |                [01;31m[K^~~~[m[K
[7.464s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K In lambda function:
[7.464s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:15:62:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
[7.465s]    15 |             [this]([01;35m[Kconst tf2_msgs::msg::TFMessage::SharedPtr msg[m[K) {
[7.465s]       |                    [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[7.466s] In file included from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
[7.466s]                  from [01m[K/usr/include/c++/11/algorithm:74[m[K,
[7.466s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:18[m[K,
[7.466s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[7.466s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[7.466s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[7.466s]                  from [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:1[m[K:
[7.466s] /usr/include/c++/11/functional: In instantiation of â€˜[01m[Kstruct std::_Bind_check_arity<void (BrainNode::*)(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >), BrainNode*>[m[Kâ€™:
[7.466s] [01m[K/usr/include/c++/11/functional:768:12:[m[K   required from â€˜[01m[Kstruct std::_Bind_helper<false, void (BrainNode::*)(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >), BrainNode*>[m[Kâ€™
[7.466s] [01m[K/usr/include/c++/11/functional:789:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (BrainNode::*)(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >); _BoundArgs = {BrainNode*}][m[Kâ€™
[7.466s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:20:116:[m[K   required from here
[7.466s] [01m[K/usr/include/c++/11/functional:756:21:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: Wrong number of arguments for pointer-to-member
[7.466s]   755 |       static_assert(_Varargs::[01;31m[Kvalue[m[K
[7.466s]       |                               [01;31m[K~~~~~[m[K
[7.466s]   756 | [01;31m[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1[m[K
[7.466s]       |                     [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[7.467s]   757 | [01;31m[K                    : sizeof...(_BoundArgs) == _Arity::value + 1[m[K,
[7.467s]       |                     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[7.467s] [01m[K/usr/include/c++/11/functional:756:21:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false ? (1 >= (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)) : (1 == (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)))[m[Kâ€™ evaluates to false
[7.473s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K In lambda function:
[7.473s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:25:65:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
[7.473s]    25 |             [this]([01;35m[Kconst geometry_msgs::msg::Point32::SharedPtr msg[m[K) {
[7.473s]       |                    [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[7.474s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K In member function â€˜[01m[Kint BrainNode::MyNode()[m[Kâ€™:
[7.474s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:35:5:[m[K [01;35m[Kwarning: [m[Kno return statement in function returning non-void [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type-Wreturn-type]8;;[m[K]
[7.474s]    35 |     [01;35m[K}[m[K
[7.474s]       |     [01;35m[K^[m[K
[7.483s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K In member function â€˜[01m[Kvoid BrainNode::handle_pen_colours(std_msgs::msg::Int32MultiArray_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[7.483s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:38:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Klength[m[Kâ€™ was not declared in this scope
[7.484s]    38 |         if ([01;31m[Klength[m[K(colours) == 0) {
[7.484s]       |             [01;31m[K^~~~~~[m[K
[7.484s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:39:27:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kdata[m[Kâ€™
[7.484s]    39 |             colours = msg.[01;31m[Kdata[m[K;
[7.484s]       |                           [01;31m[K^~~~[m[K
[7.484s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:40:50:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst SharedPtr[m[Kâ€™ {aka â€˜[01m[Kconst class std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >[m[Kâ€™} has no member named â€˜[01m[Kdata[m[Kâ€™
[7.484s]    40 |         } else if (length(colours) != length(msg.[01;31m[Kdata[m[K)) {
[7.484s]       |                                                  [01;31m[K^~~~[m[K
[7.484s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:42:13:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K,[m[Kâ€™ or â€˜[01m[K;[m[Kâ€™ before â€˜[01m[KremoveValuesWithinRange[m[Kâ€™
[7.484s]    42 |             [01;31m[KremoveValuesWithinRange[m[K(missing_colours, msg.data, 0.15)
[7.484s]       |             [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[7.484s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:41:18:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kmissing_colours[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-variable-Wunused-variable]8;;[m[K]
[7.484s]    41 |             auto [01;35m[Kmissing_colours[m[K = colours
[7.484s]       |                  [01;35m[K^~~~~~~~~~~~~~~[m[K
[7.489s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:[m[K In function â€˜[01m[Kint main(int, char**)[m[Kâ€™:
[7.489s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:81:35:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KMyNode[m[Kâ€™ was not declared in this scope
[7.490s]    81 |     rclcpp::spin(std::make_shared<[01;31m[KMyNode[m[K>());
[7.490s]       |                                   [01;31m[K^~~~~~[m[K
[7.490s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:81:42:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kmake_shared<<expression error> >()[m[Kâ€™
[7.490s]    81 |     rclcpp::spin([01;31m[Kstd::make_shared<MyNode>()[m[K);
[7.490s]       |                  [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[7.490s] In file included from [01m[K/usr/include/c++/11/memory:77[m[K,
[7.490s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153[m[K,
[7.490s]                  from [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:1[m[K:
[7.490s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:875:5:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp, class ... _Args> std::shared_ptr<_Tp> std::make_shared(_Args&& ...)[m[Kâ€™
[7.490s]   875 |     [01;36m[Kmake_shared[m[K(_Args&&... __args)
[7.490s]       |     [01;36m[K^~~~~~~~~~~[m[K
[7.490s] [01m[K/usr/include/c++/11/bits/shared_ptr.h:875:5:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[7.490s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:81:42:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
[7.490s]    81 |     rclcpp::spin([01;31m[Kstd::make_shared<MyNode>()[m[K);
[7.490s]       |                  [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[8.064s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[8.064s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[8.068s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[8.069s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[8.069s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[8.069s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[8.070s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[8.070s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[8.070s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[8.070s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[8.070s]                  from [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:1[m[K:
[8.070s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[8.070s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[8.070s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[8.070s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[8.070s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[8.070s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:20:86:[m[K   required from here
[8.070s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:391:22:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>::function(std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>&)[m[Kâ€™
[8.070s]   391 |       set_deprecated([01;31m[Kstatic_cast<typename scbth::callback_type>(callback)[m[K);
[8.070s]       |                      [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[8.070s] In file included from [01m[K/usr/include/c++/11/future:47[m[K,
[8.070s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18[m[K,
[8.070s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[8.071s]                  from [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:1[m[K:
[8.071s] [01m[K/usr/include/c++/11/bits/std_function.h:435:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >}][m[Kâ€™
[8.071s]   435 |         [01;36m[Kfunction[m[K(_Functor&& __f)
[8.071s]       |         [01;36m[K^~~~~~~~[m[K
[8.071s] [01m[K/usr/include/c++/11/bits/std_function.h:435:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[8.071s] In file included from [01m[K/usr/include/c++/11/bits/move.h:57[m[K,
[8.071s]                  from [01m[K/usr/include/c++/11/bits/stl_pair.h:59[m[K,
[8.071s]                  from [01m[K/usr/include/c++/11/bits/stl_algobase.h:64[m[K,
[8.071s]                  from [01m[K/usr/include/c++/11/memory:63[m[K,
[8.071s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153[m[K,
[8.071s]                  from [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:1[m[K:
[8.071s] /usr/include/c++/11/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void][m[Kâ€™:
[8.071s] [01m[K/usr/include/c++/11/bits/std_function.h:353:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>::_Callable<std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>&, std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>, std::__invoke_result<std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>&, std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > > > >; _Tp = void; _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >}][m[Kâ€™
[8.071s] [01m[K/usr/include/c++/11/bits/std_function.h:434:9:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[8.072s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[8.072s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[8.072s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[8.072s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[8.072s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:20:86:[m[K   required from here
[8.072s] [01m[K/usr/include/c++/11/type_traits:2205:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[8.072s]  2205 |     using [01;31m[K__enable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[8.072s]       |           [01;31m[K^~~~~~~~~~~~~[m[K
[8.072s] In file included from [01m[K/usr/include/c++/11/future:47[m[K,
[8.072s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18[m[K,
[8.072s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[8.072s]                  from [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:1[m[K:
[8.072s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[8.072s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[8.072s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[8.072s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[8.072s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Int32MultiArray_<std::allocator<void> >; CallbackT = std::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Int32MultiArray_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[8.073s] [01m[K/home/mtrn/MTRN4231_final_project/path_planning/src/brain_node.cpp:20:86:[m[K   required from here
[8.073s] [01m[K/usr/include/c++/11/bits/std_function.h:404:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >}][m[Kâ€™
[8.073s]   404 |       [01;36m[Kfunction[m[K(function&& __x) noexcept
[8.073s]       |       [01;36m[K^~~~~~~~[m[K
[8.073s] [01m[K/usr/include/c++/11/bits/std_function.h:404:27:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>[m[Kâ€™ to â€˜[01m[Kstd::function<void(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>&&[m[Kâ€™
[8.073s]   404 |       function([01;36m[Kfunction&& __x[m[K) noexcept
[8.073s]       |                [01;36m[K~~~~~~~~~~~^~~[m[K
[8.073s] [01m[K/usr/include/c++/11/bits/std_function.h:386:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >}][m[Kâ€™
[8.073s]   386 |       [01;36m[Kfunction[m[K(const function& __x)
[8.073s]       |       [01;36m[K^~~~~~~~[m[K
[8.073s] [01m[K/usr/include/c++/11/bits/std_function.h:386:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>[m[Kâ€™ to â€˜[01m[Kconst std::function<void(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>&[m[Kâ€™
[8.073s]   386 |       function([01;36m[Kconst function& __x[m[K)
[8.073s]       |                [01;36m[K~~~~~~~~~~~~~~~~^~~[m[K
[8.073s] [01m[K/usr/include/c++/11/bits/std_function.h:375:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >}; std::nullptr_t = std::nullptr_t][m[Kâ€™
[8.073s]   375 |       [01;36m[Kfunction[m[K(nullptr_t) noexcept
[8.073s]       |       [01;36m[K^~~~~~~~[m[K
[8.073s] [01m[K/usr/include/c++/11/bits/std_function.h:375:16:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (BrainNode::*(BrainNode*))(std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >)>[m[Kâ€™ to â€˜[01m[Kstd::nullptr_t[m[Kâ€™
[8.073s]   375 |       function([01;36m[Knullptr_t[m[K) noexcept
[8.073s]       |                [01;36m[K^~~~~~~~~[m[K
[8.074s] [01m[K/usr/include/c++/11/bits/std_function.h:368:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {std::shared_ptr<std_msgs::msg::Int32MultiArray_<std::allocator<void> > >}][m[Kâ€™
[8.074s]   368 |       [01;36m[Kfunction[m[K() noexcept
[8.074s]       |       [01;36m[K^~~~~~~~[m[K
[8.081s] [01m[K/usr/include/c++/11/bits/std_function.h:368:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[11.509s] gmake[2]: *** [CMakeFiles/brain_node.dir/build.make:76: CMakeFiles/brain_node.dir/src/brain_node.cpp.o] Error 1
[11.510s] gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/brain_node.dir/all] Error 2
[11.510s] gmake: *** [Makefile:146: all] Error 2
[11.514s] Invoked command in '/home/mtrn/MTRN4231_final_project/build/path_planning' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/mtrn/4231/ws_moveit2/install/moveit_configs_utils:/home/mtrn/4231/ws_moveit2/install/launch_param_builder:/opt/ros/humble /usr/bin/cmake --build /home/mtrn/MTRN4231_final_project/build/path_planning -- -j4 -l4
